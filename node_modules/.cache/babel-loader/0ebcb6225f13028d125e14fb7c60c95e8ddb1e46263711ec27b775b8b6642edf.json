{"ast":null,"code":"// mockApi.js\nimport mockContacts from \"./mockData\";\nlet contacts = [...mockContacts];\nexport const getContacts = () => {\n  return new Promise(resolve => {\n    setTimeout(() => resolve(contacts), 500); // Имитируем задержку ответа\n  });\n};\nexport const addContact = contact => {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      const maxId = contacts.length > 0 ? Math.max(...contacts.map(c => c.id + 1)) : 0;\n      const newContact = {\n        id: maxId,\n        ...contact\n      };\n      contacts.push(newContact);\n      resolve(newContact);\n    }, 500);\n  });\n};\nexport const deleteContact = id => {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      contacts = contacts.filter(contact => contact.id !== id);\n      resolve();\n    }, 500);\n  });\n};","map":{"version":3,"names":["mockContacts","contacts","getContacts","Promise","resolve","setTimeout","addContact","contact","maxId","length","Math","max","map","c","id","newContact","push","deleteContact","filter"],"sources":["D:/learn/GitHub/appstepikjavareact/client/src/layouts/mocks/mockApi.js"],"sourcesContent":["// mockApi.js\r\nimport mockContacts from \"./mockData\";\r\n\r\nlet contacts = [...mockContacts];\r\n\r\nexport const getContacts = () => {\r\n    return new Promise((resolve) => {\r\n        setTimeout(() => resolve(contacts), 500); // Имитируем задержку ответа\r\n    });\r\n};\r\n\r\nexport const addContact = (contact) => {\r\n    return new Promise((resolve) => {\r\n        setTimeout(() => {\r\n            const maxId =\r\n                contacts.length > 0\r\n                    ? Math.max(...contacts.map((c) => c.id + 1))\r\n                    : 0;\r\n            const newContact = { id: maxId, ...contact };\r\n            contacts.push(newContact);\r\n            resolve(newContact);\r\n        }, 500);\r\n    });\r\n};\r\n\r\nexport const deleteContact = (id) => {\r\n    return new Promise((resolve) => {\r\n        setTimeout(() => {\r\n            contacts = contacts.filter((contact) => contact.id !== id);\r\n            resolve();\r\n        }, 500);\r\n    });\r\n};\r\n"],"mappings":"AAAA;AACA,OAAOA,YAAY,MAAM,YAAY;AAErC,IAAIC,QAAQ,GAAG,CAAC,GAAGD,YAAY,CAAC;AAEhC,OAAO,MAAME,WAAW,GAAGA,CAAA,KAAM;EAC7B,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;IAC5BC,UAAU,CAAC,MAAMD,OAAO,CAACH,QAAQ,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EAC9C,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMK,UAAU,GAAIC,OAAO,IAAK;EACnC,OAAO,IAAIJ,OAAO,CAAEC,OAAO,IAAK;IAC5BC,UAAU,CAAC,MAAM;MACb,MAAMG,KAAK,GACPP,QAAQ,CAACQ,MAAM,GAAG,CAAC,GACbC,IAAI,CAACC,GAAG,CAAC,GAAGV,QAAQ,CAACW,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,GAAG,CAAC,CAAC,CAAC,GAC1C,CAAC;MACX,MAAMC,UAAU,GAAG;QAAED,EAAE,EAAEN,KAAK;QAAE,GAAGD;MAAQ,CAAC;MAC5CN,QAAQ,CAACe,IAAI,CAACD,UAAU,CAAC;MACzBX,OAAO,CAACW,UAAU,CAAC;IACvB,CAAC,EAAE,GAAG,CAAC;EACX,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAME,aAAa,GAAIH,EAAE,IAAK;EACjC,OAAO,IAAIX,OAAO,CAAEC,OAAO,IAAK;IAC5BC,UAAU,CAAC,MAAM;MACbJ,QAAQ,GAAGA,QAAQ,CAACiB,MAAM,CAAEX,OAAO,IAAKA,OAAO,CAACO,EAAE,KAAKA,EAAE,CAAC;MAC1DV,OAAO,CAAC,CAAC;IACb,CAAC,EAAE,GAAG,CAAC;EACX,CAAC,CAAC;AACN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}